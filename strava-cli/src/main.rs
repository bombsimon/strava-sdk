use strava_cli::auth;
use strava_sdk::apis::configuration;
use strava_sdk::apis::{activities_api, athletes_api};
use strava_sdk::models::ActivityType;

#[tokio::main]
async fn main() -> anyhow::Result<()> {
    let api_config = configuration::Configuration {
        base_path: "https://www.strava.com/api/v3".to_owned(),
        user_agent: Some("OpenAPI-Generator/3.0.0/rust".to_owned()),
        client: reqwest::Client::new(),
        oauth_access_token: Some(
            auth::get_token(
                None,
                &std::env::var("STRAVA_CLIENT_ID").expect("Env var STRAVA_CLIENT_ID missing"),
                &std::env::var("STRAVA_CLIENT_SECRET")
                    .expect("Env var STRAVA_CLIENT_SECRET missing"),
            )
            .await?,
        ),
        // Not used, but generated by `openapi-generator`.
        basic_auth: None,
        bearer_access_token: None,
        api_key: None,
    };

    let me = athletes_api::get_logged_in_athlete(&api_config).await?;
    println!("{} {}", me.firstname.unwrap(), me.lastname.unwrap());

    let mut page = 1;
    while page < 2 {
        let activities = activities_api::get_logged_in_athlete_activities(
            &api_config,
            activities_api::GetLoggedInAthleteActivitiesParams {
                before: None,
                after: Some(
                    jiff::civil::date(2023, 10, 10)
                        .to_zoned(jiff::tz::TimeZone::system())?
                        .timestamp()
                        .as_second() as i32,
                ),
                page: Some(page),
                per_page: Some(100),
            },
        )
        .await?;

        for activity in activities {
            if activity.r#type.unwrap() != ActivityType::Run {
                continue;
            }

            let time: jiff::Timestamp = activity.start_date.unwrap().parse()?;
            let dt = time.in_tz("Europe/Stockholm")?;
            if dt.weekday() != jiff::civil::Weekday::Monday {
                continue;
            }

            println!(
                "{} | {:<30} | https://www.strava.com/activities/{}",
                time,
                activity.name.unwrap(),
                activity.id.unwrap()
            );
        }

        page += 1;
    }

    Ok(())
}
